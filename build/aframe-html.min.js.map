{"version":3,"file":"aframe-html.min.js","sources":["../src/HTMLMesh.js","../src/aframe-html.js"],"sourcesContent":["import {\n\tCanvasTexture,\n\tLinearFilter,\n\tMesh,\n\tMeshBasicMaterial,\n\tPlaneGeometry,\n\tsRGBEncoding,\n\tColor\n} from 'three';\n\nclass HTMLMesh extends Mesh {\n\n\tconstructor( dom ) {\n\n\t\tconst texture = new HTMLTexture( dom );\n\n\t\tconst geometry = new PlaneGeometry( texture.image.width * 0.001, texture.image.height * 0.001 );\n\t\tconst material = new MeshBasicMaterial( { map: texture, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tfunction onEvent( event ) {\n\n\t\t\tmaterial.map.dispatchDOMEvent( event );\n\n\t\t}\n\n\t\tthis.addEventListener( 'mousedown', onEvent );\n\t\tthis.addEventListener( 'mousemove', onEvent );\n\t\tthis.addEventListener( 'mouseup', onEvent );\n\t\tthis.addEventListener( 'click', onEvent );\n\n\t\tthis.dispose = function () {\n\n\t\t\tgeometry.dispose();\n\t\t\tmaterial.dispose();\n\n\t\t\tmaterial.map.dispose();\n\n\t\t\tthis.removeEventListener( 'mousedown', onEvent );\n\t\t\tthis.removeEventListener( 'mousemove', onEvent );\n\t\t\tthis.removeEventListener( 'mouseup', onEvent );\n\t\t\tthis.removeEventListener( 'click', onEvent );\n\n\t\t};\n\n\t}\n\n}\n\nclass HTMLTexture extends CanvasTexture {\n\n\tconstructor( dom ) {\n\n\t\tsuper( html2canvas( dom ) );\n\n\t\tthis.dom = dom;\n\n\t\tthis.anisotropy = 16;\n\t\tthis.encoding = sRGBEncoding;\n\t\tthis.minFilter = LinearFilter;\n\t\tthis.magFilter = LinearFilter;\n\n\t\t// Create an observer on the DOM, and run html2canvas update in the next loop\n\t\tconst observer = new MutationObserver( () => {\n\n\t\t\tif ( ! this.scheduleUpdate ) {\n\n\t\t\t\t// ideally should use xr.requestAnimationFrame, here setTimeout to avoid passing the renderer\n\t\t\t\tthis.scheduleUpdate = setTimeout( () => this.update(), 16 );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tconst config = { attributes: true, childList: true, subtree: true, characterData: true };\n\t\tobserver.observe( dom, config );\n\n\t\tthis.observer = observer;\n\n\t}\n\n\tdispatchDOMEvent( event ) {\n\n\t\tif ( event.data ) {\n\n\t\t\thtmlevent( this.dom, event.type, event.data.x, event.data.y );\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tthis.image = html2canvas( this.dom );\n\t\tthis.needsUpdate = true;\n\n\t\tthis.scheduleUpdate = null;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.observer ) {\n\n\t\t\tthis.observer.disconnect();\n\n\t\t}\n\n\t\tthis.scheduleUpdate = clearTimeout( this.scheduleUpdate );\n\n\t\tsuper.dispose();\n\n\t}\n\n}\n\n\n//\n\nconst canvases = new WeakMap();\n\nfunction html2canvas( element ) {\n\n\tconst range = document.createRange();\n\tconst color = new Color();\n\n\tfunction Clipper( context ) {\n\n\t\tconst clips = [];\n\t\tlet isClipping = false;\n\n\t\tfunction doClip() {\n\n\t\t\tif ( isClipping ) {\n\n\t\t\t\tisClipping = false;\n\t\t\t\tcontext.restore();\n\n\t\t\t}\n\n\t\t\tif ( clips.length === 0 ) return;\n\n\t\t\tlet minX = - Infinity, minY = - Infinity;\n\t\t\tlet maxX = Infinity, maxY = Infinity;\n\n\t\t\tfor ( let i = 0; i < clips.length; i ++ ) {\n\n\t\t\t\tconst clip = clips[ i ];\n\n\t\t\t\tminX = Math.max( minX, clip.x );\n\t\t\t\tminY = Math.max( minY, clip.y );\n\t\t\t\tmaxX = Math.min( maxX, clip.x + clip.width );\n\t\t\t\tmaxY = Math.min( maxY, clip.y + clip.height );\n\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.beginPath();\n\t\t\tcontext.rect( minX, minY, maxX - minX, maxY - minY );\n\t\t\tcontext.clip();\n\n\t\t\tisClipping = true;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tadd: function ( clip ) {\n\n\t\t\t\tclips.push( clip );\n\t\t\t\tdoClip();\n\n\t\t\t},\n\n\t\t\tremove: function () {\n\n\t\t\t\tclips.pop();\n\t\t\t\tdoClip();\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction drawText( style, x, y, string ) {\n\n\t\tif ( string !== '' ) {\n\n\t\t\tif ( style.textTransform === 'uppercase' ) {\n\n\t\t\t\tstring = string.toUpperCase();\n\n\t\t\t}\n\n\t\t\tcontext.font = style.fontWeight + ' ' + style.fontSize + ' ' + style.fontFamily;\n\t\t\tcontext.textBaseline = 'top';\n\t\t\tcontext.fillStyle = style.color;\n\t\t\tcontext.fillText( string, x, y + parseFloat(style.fontSize)*0.1 );\n\n\t\t}\n\n\t}\n\n\tfunction roundRectPath(x, y, w, h, r) {\n\t\tif (w < 2 * r) r = w / 2;\n\t\tif (h < 2 * r) r = h / 2;\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(x+r, y);\n\t\tcontext.arcTo(x+w, y,   x+w, y+h, r);\n\t\tcontext.arcTo(x+w, y+h, x,   y+h, r);\n\t\tcontext.arcTo(x,   y+h, x,   y,   r);\n\t\tcontext.arcTo(x,   y,   x+w, y,   r);\n\t\tcontext.closePath();\n\t}\n\n\tfunction drawBorder( style, which, x, y, width, height ) {\n\n\t\tconst borderWidth = style[ which + 'Width' ];\n\t\tconst borderStyle = style[ which + 'Style' ];\n\t\tconst borderColor = style[ which + 'Color' ];\n\n\t\tif ( borderWidth !== '0px' && borderStyle !== 'none' && borderColor !== 'transparent' && borderColor !== 'rgba(0, 0, 0, 0)' ) {\n\n\t\t\tcontext.strokeStyle = borderColor;\n\t\t\tcontext.lineWidth = parseFloat(borderWidth);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo( x, y );\n\t\t\tcontext.lineTo( x + width, y + height );\n\t\t\tcontext.stroke();\n\n\t\t}\n\n\t}\n\n\tfunction drawElement( element, style ) {\n\n\t\tlet x = 0, y = 0, width = 0, height = 0;\n\n\t\tif ( element.nodeType === Node.TEXT_NODE ) {\n\n\t\t\t// text\n\n\t\t\trange.selectNode( element );\n\n\t\t\tconst rect = range.getBoundingClientRect();\n\n\t\t\tx = rect.left - offset.left - 0.5;\n\t\t\ty = rect.top - offset.top - 0.5;\n\t\t\twidth = rect.width;\n\t\t\theight = rect.height;\n\n\t\t\tdrawText( style, x, y, element.nodeValue.trim() );\n\n\t\t} else if ( element.nodeType === Node.COMMENT_NODE ) {\n\n\t\t\treturn;\n\n\t\t} else if ( element instanceof HTMLCanvasElement ) {\n\n\t\t\t// Canvas element\n\t\t\tif ( element.style.display === 'none' ) return;\n\n\t\t\tcontext.save();\n\t\t\tconst dpr = window.devicePixelRatio;\n\t\t\tcontext.scale(1/dpr, 1/dpr);\n\t\t\tcontext.drawImage(element, 0, 0 );\n\t\t\tcontext.restore();\n\n\t\t} else {\n\n\t\t\tif ( element.style.display === 'none' ) return;\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\tx = rect.left - offset.left - 0.5;\n\t\t\ty = rect.top - offset.top - 0.5;\n\t\t\twidth = rect.width;\n\t\t\theight = rect.height;\n\n\t\t\tstyle = window.getComputedStyle( element );\n\n\t\t\tconst backgroundColor = style.backgroundColor;\n\n\t\t\t// Get the border of the element used for fill and border\n\t\t\troundRectPath(x, y, width, height, parseFloat(style.borderRadius) );\n\t\t\tif ( backgroundColor !== 'transparent' && backgroundColor !== 'rgba(0, 0, 0, 0)' ) {\n\n\t\t\t\tcontext.fillStyle = backgroundColor;\n\t\t\t\tcontext.fill();\n\t\t\t}\n\n\t\t\t// If all the borders match then stroke the round rectangle\n\t\t\tconst borders = ['borderTop', 'borderLeft', 'borderBottom', 'borderRight'];\n\t\t\tlet match = true;\n\t\t\tlet prevBorder = null;\n\t\t\tfor (const border of borders) {\n\t\t\t\tif (prevBorder) {\n\t\t\t\t\tmatch = match && \n\t\t\t\t\t(style[ border + 'Width' ] === style[ prevBorder + 'Width' ]) &&\n\t\t\t\t\t(style[ border + 'Color' ] === style[ prevBorder + 'Color' ]) &&\n\t\t\t\t\t(style[ border + 'Style' ] === style[ prevBorder + 'Style' ]);\n\t\t\t\t}\n\t\t\t\tif (!match) break;\n\t\t\t\tprevBorder = border;\n\t\t\t}\n\n\t\t\t// they all match so stroke the rectangle from before\n\t\t\tif (match) {\n\t\t\t\tconst width = parseFloat(style.borderTopWidth);\n\t\t\t\tif ( style.borderTopWidth !== '0px' && style.borderTopStyle !== 'none' && style.borderTopColor !== 'transparent' && style.borderTopColor !== 'rgba(0, 0, 0, 0)' ) {\n\t\t\t\t\tcontext.strokeStyle = style.borderTopColor;\n\t\t\t\t\tcontext.lineWidth = width;\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Otherwise draw individual borders\n\t\t\t\tdrawBorder( style, 'borderTop', x, y, width, 0 );\n\t\t\t\tdrawBorder( style, 'borderLeft', x, y, 0, height );\n\t\t\t\tdrawBorder( style, 'borderBottom', x, y + height, width, 0 );\n\t\t\t\tdrawBorder( style, 'borderRight', x + width, y, 0, height );\n\t\t\t}\n\n\t\t\tif ( element instanceof HTMLInputElement) {\n\n\t\t\t\tlet accentColor = style.accentColor;\n\t\t\t\tif (accentColor === undefined || accentColor === 'auto') accentColor = style.color;\n\t\t\t\tcolor.set(accentColor);\n\t\t\t\tconst luminance = Math.sqrt( 0.299*color.r**2 + 0.587*color.g**2 + 0.114*color.b**2 );\n\t\t\t\tconst accentTextColor = luminance < 0.5 ? 'white' : '#111111';\n\n\t\t\t\tif (element.type  === 'radio') {\n\t\t\t\t\troundRectPath(x,y,width,height,height);\n\t\t\t\t\tcontext.fillStyle = 'white';\n\t\t\t\t\tcontext.strokeStyle = accentColor;\n\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\tcontext.fill();\n\t\t\t\t\tcontext.stroke();\n\n\t\t\t\t\tif (element.checked) {\n\t\t\t\t\t\tconst border = 2;\n\t\t\t\t\t\troundRectPath(x+border,y+border,width-border*2,height-border*2, height);\n\t\t\t\t\t\tcontext.fillStyle = accentColor;\n\t\t\t\t\t\tcontext.strokeStyle = accentTextColor;\n\t\t\t\t\t\tcontext.lineWidth = border;\n\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (element.type  === 'checkbox') {\n\t\t\t\t\troundRectPath(x,y,width,height,2);\n\t\t\t\t\tcontext.fillStyle = element.checked ? accentColor : 'white';\n\t\t\t\t\tcontext.strokeStyle = element.checked ? accentTextColor : accentColor;\n\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.fill();\n\n\t\t\t\t\tif (element.checked) {\n\t\t\t\t\t\tconst oldTextAlign = context.textAlign;\n\t\t\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\t\t\tdrawText( {\n\t\t\t\t\t\t\tcolor: accentTextColor,\n\t\t\t\t\t\t\tfontFamily: style.fontFamily,\n\t\t\t\t\t\t\tfontSize: height + 'px',\n\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t}, x + width/2, y, 'âœ”' );\n\t\t\t\t\t\tcontext.textAlign = oldTextAlign;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (element.type  === 'range') {\n\t\t\t\t\tconst [min,max,value] = ['min','max','value'].map(property => parseFloat(element[property]));\n\t\t\t\t\tconst position = ((value-min)/(max-min)) * (width - height);\n\n\t\t\t\t\troundRectPath(x,y + height*0.25,width, height*0.5, height*0.25);\n\t\t\t\t\tcontext.fillStyle = accentTextColor;\n\t\t\t\t\tcontext.strokeStyle = accentColor;\n\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\tcontext.fill();\n\t\t\t\t\tcontext.stroke();\n\n\t\t\t\t\troundRectPath(x,y + height*0.25,position+height*0.5, height*0.5, height*0.25);\n\t\t\t\t\tcontext.fillStyle = accentColor;\n\t\t\t\t\tcontext.fill();\n\n\t\t\t\t\troundRectPath(x + position,y,height, height, height*0.5);\n\t\t\t\t\tcontext.fillStyle = accentColor;\n\t\t\t\t\tcontext.fill();\n\t\t\t\t}\n\n\t\t\t\tif (element.type === 'color' || element.type === 'text' || element.type === 'number' ) {\n\n\t\t\t\t\tclipper.add( { x: x, y: y, width: width, height: height } );\n\n\t\t\t\t\tdrawText( style, x + parseInt( style.paddingLeft ), y + parseInt( style.paddingTop ), element.value );\n\n\t\t\t\t\tclipper.remove();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/*\n\t\t// debug\n\t\tcontext.strokeStyle = '#' + Math.random().toString( 16 ).slice( - 3 );\n\t\tcontext.strokeRect( x - 0.5, y - 0.5, width + 1, height + 1 );\n\t\t*/\n\n\t\tconst isClipping = style.overflow === 'auto' || style.overflow === 'hidden';\n\n\t\tif ( isClipping ) clipper.add( { x: x, y: y, width: width, height: height } );\n\n\t\tfor ( let i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tdrawElement( element.childNodes[ i ], style );\n\n\t\t}\n\n\t\tif ( isClipping ) clipper.remove();\n\n\t}\n\n\tconst offset = element.getBoundingClientRect();\n\n\tlet canvas;\n\n\tif ( canvases.has( element ) ) {\n\n\t\tcanvas = canvases.get( element );\n\n\t} else {\n\n\t\tcanvas = document.createElement( 'canvas' );\n\t\tcanvas.width = offset.width;\n\t\tcanvas.height = offset.height;\n\n\t}\n\n\tconst context = canvas.getContext( '2d'/*, { alpha: false }*/ );\n\n\tconst clipper = new Clipper( context );\n\n\t// console.time( 'drawElement' );\n\n\tdrawElement( element );\n\n\t// console.timeEnd( 'drawElement' );\n\n\treturn canvas;\n\n}\n\nfunction htmlevent( element, event, x, y ) {\n\n\tconst mouseEventInit = {\n\t\tclientX: ( x * element.offsetWidth ) + element.offsetLeft,\n\t\tclientY: ( y * element.offsetHeight ) + element.offsetTop,\n\t\tview: element.ownerDocument.defaultView\n\t};\n\n\twindow.dispatchEvent( new MouseEvent( event, mouseEventInit ) );\n\n\tconst rect = element.getBoundingClientRect();\n\n\tx = x * rect.width + rect.left;\n\ty = y * rect.height + rect.top;\n\n\tfunction traverse( element ) {\n\n\t\tif ( element.nodeType !== Node.TEXT_NODE && element.nodeType !== Node.COMMENT_NODE ) {\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\tif ( x > rect.left && x < rect.right && y > rect.top && y < rect.bottom ) {\n\n\t\t\t\telement.dispatchEvent( new MouseEvent( event, mouseEventInit ) );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\t\ttraverse( element.childNodes[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttraverse( element );\n\n}\n\nexport { HTMLMesh };\n","/* jshint esversion: 9, -W097 */\n/* For dealing with spline curves */\n/* global THREE, AFRAME, setTimeout, console */\n'use strict';\n\nimport { HTMLMesh } from './HTMLMesh.js';\n\nconst schema = {\n\ttype: 'selector',\n};\n\ndocumentation:{\n\tschema.description = `HTML element to use.`;\n\tconsole.log(`Display an interactive HTML element in the scene.`);\n}\n\nAFRAME.registerComponent('html', {\n\tschema: schema,\n\tinit() {\n\t\tthis.rerender = this.rerender.bind(this);\n\t},\n\tupdate() {\n\t\tthis.remove();\n\t\tif (!this.data) return;\n\t\tconst mesh = new HTMLMesh(this.data);\n\t\tthis.el.setObject3D('html', mesh);\n\t\tthis.data.addEventListener('input', this.rerender);\n\t},\n\trerender() {\n\t\tconst mesh = this.el.getObject3D('html');\n\t\tif (mesh && !mesh.material.map.scheduleUpdate) {\n\t\t\tmesh.material.map.scheduleUpdate = setTimeout( () => mesh.material.map.update(), 16 );\n\t\t}\n\t},\n\tremove() {\n\t\tif (this.el.getObject3D('html')) {\n\t\t\tthis.el.removeObject3D('html');\n\t\t\tthis.observer.disconnect();\n\t\t\tthis.data.removeEventListener('change', this.rerender);\n\t\t}\n\t}\n});\n"],"names":["HTMLMesh","Mesh","constructor","dom","texture","HTMLTexture","geometry","PlaneGeometry","image","width","height","material","MeshBasicMaterial","map","toneMapped","transparent","onEvent","event","dispatchDOMEvent","super","this","addEventListener","dispose","removeEventListener","CanvasTexture","html2canvas","anisotropy","encoding","sRGBEncoding","minFilter","LinearFilter","magFilter","observer","MutationObserver","scheduleUpdate","setTimeout","update","observe","attributes","childList","subtree","characterData","data","element","x","y","mouseEventInit","clientX","offsetWidth","offsetLeft","clientY","offsetHeight","offsetTop","view","ownerDocument","defaultView","window","dispatchEvent","MouseEvent","rect","getBoundingClientRect","traverse","nodeType","Node","TEXT_NODE","COMMENT_NODE","left","right","top","bottom","i","childNodes","length","htmlevent","type","needsUpdate","disconnect","clearTimeout","canvases","WeakMap","range","document","createRange","color","Color","drawText","style","string","textTransform","toUpperCase","context","font","fontWeight","fontSize","fontFamily","textBaseline","fillStyle","fillText","parseFloat","roundRectPath","w","h","r","beginPath","moveTo","arcTo","closePath","drawBorder","which","borderWidth","borderStyle","borderColor","strokeStyle","lineWidth","lineTo","stroke","offset","canvas","has","get","createElement","getContext","clipper","clips","isClipping","doClip","restore","minX","Infinity","minY","maxX","maxY","clip","Math","max","min","save","add","push","remove","pop","drawElement","selectNode","nodeValue","trim","HTMLCanvasElement","display","dpr","devicePixelRatio","scale","drawImage","backgroundColor","getComputedStyle","borderRadius","fill","borders","match","prevBorder","border","borderTopWidth","borderTopStyle","borderTopColor","HTMLInputElement","accentColor","undefined","set","accentTextColor","sqrt","g","b","checked","oldTextAlign","textAlign","value","property","position","parseInt","paddingLeft","paddingTop","overflow","AFRAME","registerComponent","schema","init","rerender","bind","mesh","el","setObject3D","getObject3D","removeObject3D"],"mappings":"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"}